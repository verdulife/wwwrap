---
import Layout from "@/layouts/Layout.astro";

const { uri } = Astro.params;
if (!uri) return;

const isLocal = uri.includes("localhost") || uri.includes("127");
const PROTOCOL = isLocal ? "http://" : "https://";
const URL = PROTOCOL + uri.replaceAll("_", "/");
---

<Layout title={`wwwrap://${uri}`}>
  <main
    id="displays"
    class:list={["flex h-screen w-full", false && "flex-row-reverse"]}
  >
    <section class="hidden w-full lg:flex">
      <iframe id="desktop" src={URL} title="Desktop wrap" class="size-full"
      ></iframe>
    </section>

    <section class="flex grow items-center justify-center p-10">
      <iframe
        id="mobile"
        src={URL}
        width="390"
        title="Mobile wrap"
        class="aspect-[9/20] max-h-full max-w-full rounded-3xl lg:max-w-none"
      ></iframe>
    </section>
  </main>
</Layout>

<style>
  #mobile {
    box-shadow:
      0 0 0 10px #000,
      0 0 0 12px #333,
      0 80px 80px -30px rgba(0, 0, 0, 0.8);
  }
</style>

<script>
  function init_syncScroll() {
    const desktop = document.querySelector("#desktop") as HTMLIFrameElement;
    const mobile = document.querySelector("#mobile") as HTMLIFrameElement;
    if (!desktop || !mobile) return;

    const { contentWindow: desktopWindow, contentDocument: desktopDocument } =
      desktop;
    const { contentWindow: mobileWindow, contentDocument: mobileDocument } =
      mobile;

    let activeDesktop: boolean;
    let activeMobile: boolean;

    desktopWindow?.addEventListener("scroll", () => {
      if (activeMobile) {
        activeMobile = false;
        return;
      }

      const { scrollY, scrollX } = desktopWindow;
      mobileWindow?.scrollTo(scrollX, scrollY);
      activeDesktop = true;

      function getScrollPercent() {
        if (!desktop.contentDocument) return;
        const h = desktop.contentDocument.documentElement;
        return (h.scrollTop / (h.scrollHeight - h.clientHeight)) * 100;
      }

      console.log({ perc: getScrollPercent() });
    });

    mobileWindow?.addEventListener("scroll", () => {
      if (activeDesktop) {
        activeDesktop = false;
        return;
      }

      const { scrollY, scrollX } = mobileWindow;
      desktopWindow?.scrollTo(scrollX, scrollY);
      activeMobile = true;
    });
  }

  init_syncScroll();
  document.addEventListener("astro:after-swap", init_syncScroll);
</script>
